package Model.Pojo;
// Generated Oct 17, 2022 6:11:51 AM by Hibernate Tools 4.3.1

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

@ManagedBean (name = "loginBean")
@SessionScoped


/**
 * Tbuser generated by hbm2java
 */
public class Tbuser  implements java.io.Serializable {


     private Integer id;
     private String email;
     private String password;

    public Tbuser() {
    }

    public Tbuser(String email, String password) {
       this.email = email;
       this.password = password;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    public boolean checkuser() {
        
        try {
            SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
            Session session = sessionFactory.openSession();
            session.beginTransaction();
            
            Query query = session.createQuery("from Tbuser where email=:email and password=:password");
            query.setString("email", email);
            query.setString("password", password);
            
            List list = query.list();
            
            if(list.size()==1) {
                return true;
            } else {
                return false;
            }            
        } catch(Exception e) {
            System.out.println(e);
        }
            return false;
    }

    public void validateEmail(FacesContext fc, UIComponent c, Object value)throws ValidatorException {
        String email= (String)value;
        Pattern mask = null;
        mask = Pattern.compile(".+@.+\\.[a-z]+");
        Matcher matcher = mask.matcher(email);
        if (!matcher.matches()) {
           FacesMessage message = new FacesMessage();
           message.setDetail("Invalid E-mail");
           message.setSummary("Invalid E-mail");
           throw new ValidatorException(message);
        }
    }
    
}


